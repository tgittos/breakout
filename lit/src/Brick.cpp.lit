== Brick ==
See header for details on what this object is.
The comments here will concern implementation details.

== Get points ==
-
int Brick::GetPoints() {
  return (int)_type;
}
-

== Is unbreakable? ==
-
bool Brick::IsUnbreakable() {
  return _type == Brick::UNBREAKABLE;
}
-

== Change type ==
-
void Brick::ChangeType(Brick::BrickType newType) {
  _type = newType;
}
-

== Constructor ==
Set the width/height of the brick based off of
the constants declared in the class.
-
Brick::Brick(BrickType type):
  _type(type) {
  Dimension* d = new Dimension();
  d->SetWidth(Brick::BRICK_WIDTH);
  d->SetHeight(Brick::BRICK_HEIGHT);

  AddFeature(d);
  AddFeature(new Collidable(this));
};
-

== Declare constants ==
C++ is a little weird sometimes, static constants
need to be defined in the .cpp file even though
it's already in the head.
-
const int Brick::BRICK_WIDTH;
const int Brick::BRICK_HEIGHT;
-

== Includes ==
-
#include "Brick.hpp"
#include "Dimension.hpp"
#include "Collidable.hpp"
-

== Wrapper ==
-
Includes.

Declare constants.

Constructor.

Get points.

Is unbreakable?.

Change type.
-

== @Brick.cpp ==
Wrapper.