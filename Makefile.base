####################################################################
# Binaries to create
####################################################################

# The game binary
EXECUTABLES = breakout

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = Ball_unittest Brick_unittest EventManager_unittest Input_unittest Paddle_unittest Score_unittest ComposableObject_unittest Collidable_unittest Dimension_unittest

####################################################################
# Base variables
####################################################################

# OSTYPE is not set by default on OS X
ifndef OSTYPE
	OSTYPE = $(shell uname -s)
endif

# Select compiler
CXX = g++

# Flags passed to the C++ compiler.
CXXFLAGS = -g -Wall -Wextra -m32

# Source code directory
SRC_DIR = src

# Test dir
TEST_DIR = tests

####################################################################
# Game related variables
####################################################################

# Include directory
IFLAGS = -Isrc

# Link flags for Linux
LDFLAGS = -lGL -lGLU -lglut -lGLEW

# Link flags for OS X, overrides Linux
ifeq "$(OSTYPE)" "Darwin"
	LDFLAGS = -framework sfml-system -framework sfml-graphics -framework sfml-window -framework sfml-audio
endif

####################################################################
# Google Test related variables
####################################################################

# Include Google Test headers
GTEST_IFLAGS = -I$(GTEST_DIR)/include

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../googletest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h $(GTEST_DIR)/include/gtest/internal/*.h

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

####################################################################
# Google Mock related variables
####################################################################

# Include Google Test headers
GMOCK_IFLAGS = -I$(GMOCK_DIR)/include

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GMOCK_DIR = ../googlemock

####################################################################
# Google Test build targets
####################################################################

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_IFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest-all.cc -o $@

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_IFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest_main.cc -o $@

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ gtest-all.o gtest_main.o

####################################################################
# Google Mock build targets
####################################################################	

gmock-all.o:
	$(CXX) $(GTEST_IFLAGS) -I${GTEST_DIR} $(GMOCK_IFLAGS) -I${GMOCK_DIR} $(CXXFLAGS) -c ${GMOCK_DIR}/src/gmock-all.cc

libgmock.a: gtest-all.o gmock-all.o
	ar -rv libgmock.a gtest-all.o gmock-all.o

####################################################################
# Project build targets
####################################################################

.PHONY: all clean includes assets
.DEFAULT: all

all: tests $(EXECUTABLES) assets

clean :
	rm -Rf bin
	rm -f $(TESTS) gtest.a gtest_main.a libgmock.a *.o

includes:
	literati tangle -o src/. lit/include

mocks:
	literati tangle -o src/. lit/mocks

tests : includes mocks $(TESTS)
	$(addprefix ./,$(TESTS))

assets:
	mkdir -p bin/assets
	cp -r assets/* bin/assets/.

breakout: includes Main.o Game.o
	mkdir -p bin
	$(CXX) Main.o Game.o $(IFLAGS) $(LDFLAGS) $(CXXFLAGS) -o bin/$@

####################################################################
# Auto generated build targets
####################################################################